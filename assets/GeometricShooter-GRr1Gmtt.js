import{r as a,j as R}from"./index-CAwovsVd.js";function A(){const y=a.useRef(null),f=a.useRef(0),n=a.useRef({x:1,y:0}),d=a.useRef([{x:5,y:5}]);return a.useEffect(()=>{const o=y.current,i=o.getContext("2d"),u=window.devicePixelRatio||1,r=16,c=20,l=r*c,x=r*c;o.width=l*u,o.height=x*u,o.style.width=`${l}px`,o.style.height=`${x}px`,i.scale(u,u);const w=e=>{const t=n.current;e.key==="ArrowUp"&&t.y===0&&(n.current={x:0,y:-1}),e.key==="ArrowDown"&&t.y===0&&(n.current={x:0,y:1}),e.key==="ArrowLeft"&&t.x===0&&(n.current={x:-1,y:0}),e.key==="ArrowRight"&&t.x===0&&(n.current={x:1,y:0})};window.addEventListener("keydown",w);let h=0;const p=150;function m(e){e-h>p&&(k(),v(),h=e),f.current=requestAnimationFrame(m)}function k(){const e=n.current,t=d.current,s={x:t[0].x+e.x,y:t[0].y+e.y};s.x=(s.x+c)%c,s.y=(s.y+c)%c,t.unshift(s),t.pop()}function v(){i.fillStyle="#111",i.fillRect(0,0,l,x),i.fillStyle="lime";for(const e of d.current)i.fillRect(e.x*r,e.y*r,r,r)}return f.current=requestAnimationFrame(m),()=>{window.removeEventListener("keydown",w),cancelAnimationFrame(f.current)}},[]),R.jsx("div",{className:"viewport",children:R.jsx("canvas",{ref:y})})}export{A as GeometricShooter};
